<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DeepLTranslatorKeyDialogInstructionUrl" xml:space="preserve">
    <value>https://www.deepl.com/pro?cta=header-pro/</value>
  </data>
  <data name="GoogleTranslatorKeyDialogInstructionUrl" xml:space="preserve">
    <value>https://cloud.google.com/translate/docs/setup#creating_service_accounts_and_keys</value>
  </data>
  <data name="HelpForAzureOpenAiAddYourOwnApiKey" xml:space="preserve">
    <value>Click this button to enter your own Resource key and other information needed to use the Microsoft Azure Open AI Service. See https://learn.microsoft.com/en-us/azure/ai-services/openai/how-to/create-resource, for more information on how to get your own Azure Open AI Resource. Note: there is no default Resource for this converter; you must get your own to use it.</value>
  </data>
  <data name="HelpForAzureOpenAiSourceLanguageTextBox" xml:space="preserve">
    <value>Enter the name of the language you want the Azure Open AI Resource to tranlate from (e.g. Hindi)</value>
  </data>
  <data name="HelpForAzureOpenAiSystemPromptAdditionsComboBox" xml:space="preserve">
    <value>You can add one of the existing additions to the base system prompt using the values in this drop down box (or type in your own)</value>
  </data>
  <data name="HelpForAzureOpenAiSystemPromptTextBox" xml:space="preserve">
    <value>This box shows the System Prompt that will be sent to the Azure Open AI Resource</value>
  </data>
  <data name="HelpForAzureOpenAiTargetLanguageTextBox" xml:space="preserve">
    <value>Enter the name of the language you want the Azure Open AI Resource to tranlate into (e.g. English)</value>
  </data>
  <data name="HelpForBingTranslatorAddYourOwnApiKey" xml:space="preserve">
    <value>Click this button to enter your own API key from Microsoft Azure. See the "Prerequisites" section on the page, https://docs.microsoft.com/en-us/azure/cognitive-services/translator/quickstart-translator, for how to get your own key (e.g. if the default API key has run out of translation support -- note: the default API key is using the free pricing tier and is limited to 2 million characters/month)</value>
  </data>
  <data name="HelpForBingTranslatorRadioButtonDictionaryLookup" xml:space="preserve">
    <value>Choose this option to create a dictionary lookup converter for a word from one language to another. If there are multiple translations for a given word, then the converted text will be in the Ample ambiguity form (i.e. "%&lt;count=n&gt;%&lt;translation_1&gt;%&lt;translation_2&gt;%...%&lt;translation_n&gt;%", e.g. "%2%from%with%"). Note: if there are multiple words in the input text, the lookup will only return data for the first word.
See the Dictionary column in the chart on the webpage: https://docs.microsoft.com/en-us/azure/cognitive-services/translator/language-support to see which languages have dictionary support.</value>
  </data>
  <data name="HelpForBingTranslatorRadioButtonTranslate" xml:space="preserve">
    <value>Choose this option to create a translator from one language to another, or from 'Any' language (aka. Auto-Detect) to some target language
See https://docs.microsoft.com/en-us/azure/cognitive-services/translator/language-support to see which languages are supported.</value>
  </data>
  <data name="HelpForBingTranslatorRadioButtonTranslateWithTransliteration" xml:space="preserve">
    <value>Choose this option to create a translator from one language to another, or from 'Any' language (aka. Auto-Detect) to some target language AND transliterate the result into another script (currently, only Latin supported).
See https://docs.microsoft.com/en-us/azure/cognitive-services/translator/language-support to see which languages and transliterated scripts are supported.</value>
  </data>
  <data name="HelpForBingTranslatorRadioButtonTransliterate" xml:space="preserve">
    <value>Choose this option to create a transliterator from one script to another for a given Source language.
See https://docs.microsoft.com/en-us/azure/cognitive-services/translator/language-support to see which languages and transliterated scripts are supported.</value>
  </data>
  <data name="HelpForBingTranslatorSourceLanguagesComboBox" xml:space="preserve">
    <value>Choose the language you want to translate or transliterate from. Choose 'Auto-Detect' if you want the underlying Bing Translator to attempt to determine the input language. See https://docs.microsoft.com/en-us/azure/cognitive-services/translator/language-support to see which languages support Auto language detection.</value>
  </data>
  <data name="HelpForBingTranslatorSourceScriptTextBox" xml:space="preserve">
    <value>This box shows the expected script of the input text before it is transliterated.</value>
  </data>
  <data name="HelpForBingTranslatorTargetLanguagesComboBox" xml:space="preserve">
    <value>Choose the language you want the input text to be translated into.</value>
  </data>
  <data name="HelpForBingTranslatorTargetScriptsComboBox" xml:space="preserve">
    <value>Choose the script you want the input text (or the translated text, in the 'Translate + Transliterate' case) to be transliterated into.</value>
  </data>
  <data name="HelpForDeepLTranslatorAddYourOwnApiKey" xml:space="preserve">
    <value>Click this button to enter your own API key from DeepL. See the "Find your perfect plan" section on the page, https://www.deepl.com/pro?cta=header-pro, for how to get your own key (e.g. if the default API key has run out of translation support -- note: the default API key is using the free pricing tier and is limited to 500K characters/month for all users)</value>
  </data>
  <data name="HelpForDeepLTranslatorFormalityLevel" xml:space="preserve">
    <value>If the language you want to translate into (i.e. Target language) supports formality, then these radio buttons will be enabled allowing you to choose between more or less formality during translation.</value>
  </data>
  <data name="HelpForDeepLTranslatorSourceLanguagesComboBox" xml:space="preserve">
    <value>Choose the language you want to translate or transliterate from. Choose 'Auto-Detect' if you want the underlying DeepL Translator to attempt to determine the input language.</value>
  </data>
  <data name="HelpForDeepLTranslatorTargetLanguagesComboBox" xml:space="preserve">
    <value>Choose the language you want the input text to be translated into.</value>
  </data>
  <data name="HelpForGoogleTranslatorAddYourOwnApiKey" xml:space="preserve">
    <value>Click this button to enter your own Google Cloud credential key. Follow the instructions on the page, https://cloud.google.com/translation-hub/docs/admin-setup, to get create your own Google Cloud Translate service and get your own credentials (e.g. if the default credentials have run out of translation support -- note: the default credentials are using the free pricing tier and is limited to 500K characters/month for all users)</value>
  </data>
  <data name="HelpForGoogleTranslatorSourceLanguagesComboBox" xml:space="preserve">
    <value>Choose the language you want to translate from. Choose 'Auto-Detect' if you want Google Translate to attempt to determine the input language.</value>
  </data>
  <data name="HelpForGoogleTranslatorTargetLanguagesComboBox" xml:space="preserve">
    <value>Choose the language you want the input text to be translated into.</value>
  </data>
  <data name="HelpForNllbTranslatorAddYourOwnApiKey" xml:space="preserve">
    <value>Click this button to enter your own API key.</value>
  </data>
  <data name="HelpForNllbTranslatorSourceLanguagesComboBox" xml:space="preserve">
    <value>Choose the language you want to translate from.</value>
  </data>
  <data name="HelpForNllbTranslatorTargetLanguagesComboBox" xml:space="preserve">
    <value>Choose the language you want the input text to be translated into.</value>
  </data>
</root>