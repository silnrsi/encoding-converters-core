using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.IO;
using System.Text;

namespace SilEncConverters40.EcTranslators
{
	public class PromptExeTranslatorCommandLineArgs
	{
		public List<string> ExamplesInputString { get; set; }
		public List<string> ExamplesOutputString { get; set; }
		public string SystemPrompt { get; set; }
		public string Credentials { get; set; }

		public override string ToString()
		{
			var json = JsonConvert.SerializeObject(this);
			var base64 = StringToBase64(json);
			return base64;
			/* e.g for VertexAi
				H=>E: eyJQcm9qZWN0SWQiOiJicmlnaHQtY295b3RlLTM4MTgxMiIsIkxvY2F0aW9uSWQiOiJ1cy1jZW50cmFsMSIsIlB1Ymxpc2hlciI6Imdvb2dsZSIsIk1vZGVsSWQiOiJjaGF0LWJpc29uLTMyayIsIkV4YW1wbGVJbnB1dFN0cmluZyI6IuCkuOClg+Ckt+CljeCkn+CkvyDgpJXgpYcg4KSG4KSw4KSC4KStIOCkuOClhyDgpLLgpYfgpJXgpLAg4KSq4KSw4KSu4KWH4KS24KWN4KS14KSwIOCksuCli+Ckl+Cli+CkgiDgpKrgpLAg4KSF4KSq4KSo4KWAIOCkh+CkmuCljeKAjeCkm+CkvuCkj+CkgSwg4KSs4KS54KWB4KSkIOCkrOCkvuCksCDgpK3gpL/gpKjgpY3igI3gpKgt4KSt4KS/4KSo4KWN4oCN4KSoIOCkquCljeCksOCkleCkvuCksCDgpLjgpYcg4KSq4KWN4KSw4KSV4KSfIOCkleCksOCkpOCkviDgpIbgpK/gpL4g4KS54KWI4KWkIOCkueCkruCkvuCksOClhyDgpKrgpYLgpLDgpY3gpLXgpJzgpYvgpIIg4KSV4KWHIOCkr+ClgeCklyDgpK7gpYfgpIIg4KSt4KWAIOCkquCksOCkruClh+CktuCljeCkteCksCDgpLjgpILgpKQt4KSu4KS54KS+4KSk4KWN4oCN4KSu4KS+4KST4KSCIOCkleClhyDgpKbgpY3gpLXgpL7gpLDgpL4g4KSF4KSq4KSo4KS+IOCkuOCkguCkpuClh+CktiDgpK3gpYfgpJzgpKTgpL4g4KSl4KS+4KWkIiwiRXhhbXBsZU91dHB1dFN0cmluZyI6IlNpbmNlIHRoZSBiZWdpbm5pbmcgb2YgY3JlYXRpb24sIEdvZCBoYXMgcmV2ZWFsZWQgSGlzIHdpbGwgdG8gbWFua2luZCBtYW55IHRpbWVzIGluIGRpZmZlcmVudCB3YXlzLiBFdmVuIGluIHRoZSBlcmEgb2Ygb3VyIGFuY2VzdG9ycywgR29kIHVzZWQgdG8gc2VuZCBIaXMgbWVzc2FnZSB0aHJvdWdoIHNhaW50cyBhbmQgcHJvcGhldHMuIiwiU3lzdGVtUHJvbXB0IjoiWW91IHdpbGwgYmUgZ2l2ZW4gMSBvciBtb3JlIGxpbmVzIG9mIHRleHQgaW4gSGluZGkgd2hpY2ggeW91IGFyZSB0byB0cmFuc2xhdGUgaW50byBFbmdsaXNoIFRyYW5zbGF0ZSBmcm9tIEhpbmRpIGludG8gRW5nbGlzaC4gYW5kIHJldHVybiBvbmx5IHRoZSB0cmFuc2xhdGVkIGxpbmVzLiIsIkNyZWRlbnRpYWxzIjoieyAgJ3R5cGUnOiAnc2VydmljZV9hY2NvdW50JywgICdwcm9qZWN0X2lkJzogJ2JyaWdodC1jb3lvdGUtMzgxODEyJywgICdwcml2YXRlX2tleV9pZCc6ICdiYzU4NGNlYzAwN2ZhOTcxMTcyMzE5ZDk0MWIwMzVhOWJlNjUzM2RlJywgICdwcml2YXRlX2tleSc6ICctLS0tLUJFR0lOIFBSSVZBVEUgS0VZLS0tLS1cbk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRRGNrUFdBaUEzaVRiQURcbm4wSmQxK29vbGZtNHVNSW5JZ2VVVE5tVHJFeEhET05xZTJZamI3VWVkUjdPMGlGaVJkOW1NaEk2RVpFWStoaWhcbmhFcndEOEVSZjdLRkxrdmRyTjgyOUIvejU5bFFLYWZiTjlHUGNmdUpDTGdheGVqUXAwL3dMMFBkcFF6ZmZMQ3hcbk9pdjlKZGwyOWk0S053N2IvaE05Tys3OWluclRKLzRzRnJtZXpoMjBHY205NVNFNWo4MTkyakRmUWdTV05KV3VcbjZVb1ZyTlJPWVIxV1o3cUp0OTVsQ1lScitydTJBVGxPaTJvbTFldEVwUE1Wd0hTeHZIcElYYVFKdisxaHdDYldcbmZuYjE2bTNWR2t3bnk3YXBnNGtIWEZxSnpqeGJqVm9pYTE4OCtON2FOekQyTEdMMW1nR2l3dUxzSzNHNnVLZnlcblkyeXRKUWpoQWdNQkFBRUNnZ0VBQlVNWTlORTJJOVhzdFA3cVIrUHZPV3IzMEYrcHkrSkZyQlRMNkhCSytQTllcbmUvdHovclNmSllvSHQwbGppQkUwdnQ3aklQOFhHeUY1RjhZZ3ZhN0NDV0pla0d0bi9tSzkxKzFCdzRWZW1abEhcblVMRkprTlNRU3JyK1RhNzIzcDY5dnpRbytFMVVKL010RWRyYWRwOTk4MWJrNXZ2c21ReDBFZjBEZHZsOE0vdzJcbkJydC94MjN3YUt1WS90NE1TYUdTbklad281Wm94YTJxN2dvMFYvWk4zMC9LaGlLQVhLS1ZPRkJkZUVkQ0VneDhcbktPZThhOEI2VjZBcG13UFVoTWwvdnlFNWlxY00vVXhtN1FEbFdidUxoS3o3ZFVEaFIwOXUzbTlQc1Q0bXBIMFBcbnd5NWM3bVA4TkwrT1drQ1ZkYmNXOUZPL2E2dzZKclBreHVQNVZrNk5RUUtCZ1FEeVRBNkRmZUFNVEF1RUllVUJcbmJ6OUZ5T0xxK0poVEkwTFZwUFBXaDkyZmtjUXJ5ZFFpTmZ4REJPYXAyUXN1RWo4bWc2dnFCUHpSamV0UmM1UjRcblM0TWJDOGZab3hEeEtZY0tSOUo2dTgzSXFpOHh2amFHcjlNekIzRnF0WkVsUHFKdFFhTC9yRWJvamFhS1J0WEdcbnBVSE9TMGxuc3pKRGJBMldOSXoyT0lCZ29RS0JnUURwQ2trOTZaZ0IzVjVkcndiMXowenh6MFJsQlZ3Y3dDM3JcblZSMkhUQnUweHRIT0FYOVpYc25tb3pJdXk3RmxUUmdJeXNjTkVsTlBtR2M1NC9Zdkt1OVZobElDSEVzT0I1b3NcblNUSmh4VnVBdE01Z2hJTXlmZ1Z0UHVPaWt4Vm93RjJRSnBRWC9rbFU4YWZ3MmQ0dE5yVVBXWUl3c1FWZDUwT2hcblB6dGNicnlBUVFLQmdCZjhuNU0wNnZGTXRmY213OTBZZmxNU1NDU3E1Nm1UWEJKNmVnbEsrZzNLQ0htdFNXcjVcbm5UZWxUSkNVQkI5VGZ4ejQvQlAyMm5DRWREOWtDZGErNHdQU2JyNkUvakJoeEJTb2Q1WGU4Y2hqMExoRDlISHhcbkJoK1BKUk5EVmxNeG1ETG94Skk3SStueDNBTGtjRlZ5RnNtdGVsN2h4cUFXR21JOFlaZ2VqOWNCQW9HQkFOR2FcbmdOb0Erc25pay9mcmIzVTBLVjd0TC9VMDV1NnRKQ0FoQkZnbTZseWszeHhOV0gvSHRBMlFCNWp6ZVBGR2NER29cblFYVE9ZTVNjcld2eVVBR0l1by9RS243ZmQ5cDhsL3p4TVRHalUzUG1MQ0cvemtsaDgvdVlyeUlRN1JhMHZ2TGlcbjRCemNpSlN3Ym45QlZvYVFTRFl3S2RzbHZWQUNyRitpQWdCWFVaQ0JBb0dBS2xXU1Z4aUFjUXZsZVdHT1hHWTZcbjdUVWdoOXAwdmx1Y2gwWXVFV1A3MEJRVDdmYjIzeUdUMWU0aWtLbWtueUhHQWtEZlZ1bzE2WCs3S0c3cnVpNWFcbldwRWdVc3FKcWlVcC9RVVlmcDZlVWhJMzdGQlVyeEg0eXFNeXZvY3BuUUhSQ2Z6NFBnaXJzSmdOdmJYa25aVE1cbk9HZjRqdGovWk1OV3gwd3c4RE5nTzNRPVxuLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLVxuJywgICdjbGllbnRfZW1haWwnOiAndmVydGV4YWllbmNjb252ZXJ0ZXJAYnJpZ2h0LWNveW90ZS0zODE4MTIuaWFtLmdzZXJ2aWNlYWNjb3VudC5jb20nLCAgJ2NsaWVudF9pZCc6ICcxMTYxMTM1NDE1NjY4OTI5MjM2OTInLCAgJ2F1dGhfdXJpJzogJ2h0dHBzOi8vYWNjb3VudHMuZ29vZ2xlLmNvbS9vL29hdXRoMi9hdXRoJywgICd0b2tlbl91cmknOiAnaHR0cHM6Ly9vYXV0aDIuZ29vZ2xlYXBpcy5jb20vdG9rZW4nLCAgJ2F1dGhfcHJvdmlkZXJfeDUwOV9jZXJ0X3VybCc6ICdodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9vYXV0aDIvdjEvY2VydHMnLCAgJ2NsaWVudF94NTA5X2NlcnRfdXJsJzogJ2h0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL3JvYm90L3YxL21ldGFkYXRhL3g1MDkvdmVydGV4YWllbmNjb252ZXJ0ZXIlNDBicmlnaHQtY295b3RlLTM4MTgxMi5pYW0uZ3NlcnZpY2VhY2NvdW50LmNvbScsICAndW5pdmVyc2VfZG9tYWluJzogJ2dvb2dsZWFwaXMuY29tJ30ifQ==
				E=>H: eyJQcm9qZWN0SWQiOiJicmlnaHQtY295b3RlLTM4MTgxMiIsIkxvY2F0aW9uSWQiOiJ1cy1jZW50cmFsMSIsIlB1Ymxpc2hlciI6Imdvb2dsZSIsIk1vZGVsSWQiOiJjaGF0LWJpc29uLTMyayIsIlRlbXBlcmF0dXJlIjowLjMsIk1heERlY29kZVN0ZXBzIjoyMDAsIlRvcFAiOjAuOCwiVG9wSyI6NDAsIkV4YW1wbGVJbnB1dFN0cmluZyI6bnVsbCwiRXhhbXBsZU91dHB1dFN0cmluZyI6bnVsbCwiU3lzdGVtUHJvbXB0IjoiWW91IHdpbGwgYmUgZ2l2ZW4gMSBvciBtb3JlIGxpbmVzIG9mIHRleHQgaW4gRW5nbGlzaCB3aGljaCB5b3UgYXJlIHRvIHRyYW5zbGF0ZSBpbnRvIEhpbmRpIHdpdGggYSBcImZyZWUgdHJhbnNsYXRpb25cIiBzdHlsZSBhaW1lZCBhdCBoaWdoIHNjaG9vbCBzdHVkZW50cyBhbmQgcmV0dXJuIG9ubHkgdGhlIHRyYW5zbGF0ZWQgbGluZXMuIiwiQ3JlZGVudGlhbHMiOiJ7ICAndHlwZSc6ICdzZXJ2aWNlX2FjY291bnQnLCAgJ3Byb2plY3RfaWQnOiAnYnJpZ2h0LWNveW90ZS0zODE4MTInLCAgJ3ByaXZhdGVfa2V5X2lkJzogJ2JjNTg0Y2VjMDA3ZmE5NzExNzIzMTlkOTQxYjAzNWE5YmU2NTMzZGUnLCAgJ3ByaXZhdGVfa2V5JzogJy0tLS0tQkVHSU4gUFJJVkFURSBLRVktLS0tLVxuTUlJRXZRSUJBREFOQmdrcWhraUc5dzBCQVFFRkFBU0NCS2N3Z2dTakFnRUFBb0lCQVFEY2tQV0FpQTNpVGJBRFxubjBKZDErb29sZm00dU1JbklnZVVUTm1UckV4SERPTnFlMllqYjdVZWRSN08waUZpUmQ5bU1oSTZFWkVZK2hpaFxuaEVyd0Q4RVJmN0tGTGt2ZHJOODI5Qi96NTlsUUthZmJOOUdQY2Z1SkNMZ2F4ZWpRcDAvd0wwUGRwUXpmZkxDeFxuT2l2OUpkbDI5aTRLTnc3Yi9oTTlPKzc5aW5yVEovNHNGcm1lemgyMEdjbTk1U0U1ajgxOTJqRGZRZ1NXTkpXdVxuNlVvVnJOUk9ZUjFXWjdxSnQ5NWxDWVJyK3J1MkFUbE9pMm9tMWV0RXBQTVZ3SFN4dkhwSVhhUUp2KzFod0NiV1xuZm5iMTZtM1ZHa3dueTdhcGc0a0hYRnFKemp4YmpWb2lhMTg4K043YU56RDJMR0wxbWdHaXd1THNLM0c2dUtmeVxuWTJ5dEpRamhBZ01CQUFFQ2dnRUFCVU1ZOU5FMkk5WHN0UDdxUitQdk9XcjMwRitweStKRnJCVEw2SEJLK1BOWVxuZS90ei9yU2ZKWW9IdDBsamlCRTB2dDdqSVA4WEd5RjVGOFlndmE3Q0NXSmVrR3RuL21LOTErMUJ3NFZlbVpsSFxuVUxGSmtOU1FTcnIrVGE3MjNwNjl2elFvK0UxVUovTXRFZHJhZHA5OTgxYms1dnZzbVF4MEVmMERkdmw4TS93MlxuQnJ0L3gyM3dhS3VZL3Q0TVNhR1NuSVp3bzVab3hhMnE3Z28wVi9aTjMwL0toaUtBWEtLVk9GQmRlRWRDRWd4OFxuS09lOGE4QjZWNkFwbXdQVWhNbC92eUU1aXFjTS9VeG03UURsV2J1TGhLejdkVURoUjA5dTNtOVBzVDRtcEgwUFxud3k1YzdtUDhOTCtPV2tDVmRiY1c5Rk8vYTZ3NkpyUGt4dVA1Vms2TlFRS0JnUUR5VEE2RGZlQU1UQXVFSWVVQlxuYno5RnlPTHErSmhUSTBMVnBQUFdoOTJma2NRcnlkUWlOZnhEQk9hcDJRc3VFajhtZzZ2cUJQelJqZXRSYzVSNFxuUzRNYkM4ZlpveER4S1ljS1I5SjZ1ODNJcWk4eHZqYUdyOU16QjNGcXRaRWxQcUp0UWFML3JFYm9qYWFLUnRYR1xucFVIT1MwbG5zekpEYkEyV05JejJPSUJnb1FLQmdRRHBDa2s5NlpnQjNWNWRyd2IxejB6eHowUmxCVndjd0MzclxuVlIySFRCdTB4dEhPQVg5Wlhzbm1vekl1eTdGbFRSZ0l5c2NORWxOUG1HYzU0L1l2S3U5VmhsSUNIRXNPQjVvc1xuU1RKaHhWdUF0TTVnaElNeWZnVnRQdU9pa3hWb3dGMlFKcFFYL2tsVThhZncyZDR0TnJVUFdZSXdzUVZkNTBPaFxuUHp0Y2JyeUFRUUtCZ0JmOG41TTA2dkZNdGZjbXc5MFlmbE1TU0NTcTU2bVRYQko2ZWdsSytnM0tDSG10U1dyNVxublRlbFRKQ1VCQjlUZnh6NC9CUDIybkNFZEQ5a0NkYSs0d1BTYnI2RS9qQmh4QlNvZDVYZThjaGowTGhEOUhIeFxuQmgrUEpSTkRWbE14bURMb3hKSTdJK254M0FMa2NGVnlGc210ZWw3aHhxQVdHbUk4WVpnZWo5Y0JBb0dCQU5HYVxuZ05vQStzbmlrL2ZyYjNVMEtWN3RML1UwNXU2dEpDQWhCRmdtNmx5azN4eE5XSC9IdEEyUUI1anplUEZHY0RHb1xuUVhUT1lNU2NyV3Z5VUFHSXVvL1FLbjdmZDlwOGwvenhNVEdqVTNQbUxDRy96a2xoOC91WXJ5SVE3UmEwdnZMaVxuNEJ6Y2lKU3dibjlCVm9hUVNEWXdLZHNsdlZBQ3JGK2lBZ0JYVVpDQkFvR0FLbFdTVnhpQWNRdmxlV0dPWEdZNlxuN1RVZ2g5cDB2bHVjaDBZdUVXUDcwQlFUN2ZiMjN5R1QxZTRpa0tta255SEdBa0RmVnVvMTZYKzdLRzdydWk1YVxuV3BFZ1VzcUpxaVVwL1FVWWZwNmVVaEkzN0ZCVXJ4SDR5cU15dm9jcG5RSFJDZno0UGdpcnNKZ052YlhrblpUTVxuT0dmNGp0ai9aTU5XeDB3dzhETmdPM1E9XG4tLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tXG4nLCAgJ2NsaWVudF9lbWFpbCc6ICd2ZXJ0ZXhhaWVuY2NvbnZlcnRlckBicmlnaHQtY295b3RlLTM4MTgxMi5pYW0uZ3NlcnZpY2VhY2NvdW50LmNvbScsICAnY2xpZW50X2lkJzogJzExNjExMzU0MTU2Njg5MjkyMzY5MicsICAnYXV0aF91cmknOiAnaHR0cHM6Ly9hY2NvdW50cy5nb29nbGUuY29tL28vb2F1dGgyL2F1dGgnLCAgJ3Rva2VuX3VyaSc6ICdodHRwczovL29hdXRoMi5nb29nbGVhcGlzLmNvbS90b2tlbicsICAnYXV0aF9wcm92aWRlcl94NTA5X2NlcnRfdXJsJzogJ2h0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL29hdXRoMi92MS9jZXJ0cycsICAnY2xpZW50X3g1MDlfY2VydF91cmwnOiAnaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vcm9ib3QvdjEvbWV0YWRhdGEveDUwOS92ZXJ0ZXhhaWVuY2NvbnZlcnRlciU0MGJyaWdodC1jb3lvdGUtMzgxODEyLmlhbS5nc2VydmljZWFjY291bnQuY29tJywgICd1bml2ZXJzZV9kb21haW4nOiAnZ29vZ2xlYXBpcy5jb20nfSJ9
			*/

			static string StringToBase64(string plainText)
			{
				byte[] plainTextBytes = Encoding.UTF8.GetBytes(plainText);
				return Convert.ToBase64String(plainTextBytes);
			}
		}

		public string SaveToTempFile()
		{
			var tempFilespec = Path.GetTempFileName();
			var json = JsonConvert.SerializeObject(this);
			var encrypted = EncryptionClass.Encrypt(json);
			File.WriteAllText(tempFilespec, encrypted);
			System.Diagnostics.Debug.WriteLine($"file: {tempFilespec} contains: {json}");
			return tempFilespec;
		}
	}
}
